class Solution {
public:
    int solve1(vector<int>& nums,int n,vector<int>& dp1)
    {
        if(n<0){
            return 0;
        }
        if(dp1[n]!=-1){
            return dp1[n];
        }
        int incl=nums[n]+solve1(nums,n-2,dp1);
        int excl=solve1(nums,n-1,dp1);
        dp1[n]= max(incl,excl);
        return dp1[n];
    }
    int solve(vector<int>& nums,int n,vector<int>& dp)
    {
        if(n<=0){
            return 0;
        }
        if(dp[n]!=-1){
            return dp[n];
        }
        int incl=nums[n]+solve(nums,n-2,dp);
        int excl=solve(nums,n-1,dp);
        dp[n]=max(incl,excl);
        return dp[n];
    }
    int rob(vector<int>& nums) {
        int n=nums.size();
        if(n==1){
            return nums[0];
        }
        vector<int>dp(n+1,-1);
        vector<int>dp1(n+1,-1);
        return max(solve(nums,n-1,dp),solve1(nums,n-2,dp1));
    }
};

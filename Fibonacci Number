#include<bits/stdc++.h>
using namespace std;


int main()
{
      int n;
      cin>>n;
      vector<int>dp(n+1);
      dp[1]=1;
      dp[0]=0;
      for(int i=2;i<=n;i++){
         dp[i]=dp[i-1]+dp[i-2];
      }
     cout<<dp[n];
}
//DP topdown
class Solution {
public:
    int solve(int n,vector<int>& dp)
    {
        if(n==0){
            return 0;
        }
        if(n==1 || n==2){
            return 1;
        }
        if(dp[n]!=-1){
            return dp[n];
        }
        dp[n]= fib(n-1)+fib(n-2);
        return dp[n];
    }
    int fib(int n) {
        vector<int>dp(n+1,-1);
        return solve(n,dp);
    }
};

//dp bottom up

class Solution {
public:
    int solve(int n)
    {
        vector<int> dp(n+1,-1);
        dp[0]=0;
        dp[1]=1;
        dp[2]=1;
        if(dp[n]!=-1){
            return dp[n];
        }
        for(int i=3;i<=n;i++){
           dp[i]= dp[i-1]+dp[i-2];
        }
        return dp[n];
    }
    int fib(int n) {
        if(n<=1){
            return n;
        }
        if(n==2){
            return 1;
        }
        return solve(n);
    }
};
